{"version":3,"sources":["components/Filter/Filter.module.css","components/Forms/Form.js","redux/app/app-phonebook-actions.js","components/Todolist/Todolist.js","components/Filter/Filter.js","App.js","redux/app/app-phonebook-reducer.js","redux/store.js","index.js","components/Forms/Form.module.css","components/Todolist/Todolist.module.css"],"names":["module","exports","Form","state","id","name","number","association","contactIdName","uuid","contactIdNumber","handleChange","e","console","log","currentTarget","value","setState","handleSabmit","preventDefault","contactId","contactItem","props","OnSubmit","onAdd","resetForm","onSubmit","this","className","s","m","title","htmlFor","form__name","onChange","type","pattern","required","form__number","radio__btn","checked","Component","connect","dispatch","contactR","payload","contactProps","contactsOll","contact","onDeleteContact","deleteContacts","contacts__list","map","item","name__contact","btn","onClick","Filter","label","input","App","filter","hendlerSubmitForm","some","el","alert","prevState","changeFilter","getVisibleContacts","optimizedFilter","toLowerCase","includes","visibleContacts","initState","phonebookReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f29ab404.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__MWq11\",\"input\":\"Filter_input__1gi6F\"};","import React from 'react';\nimport { Component } from 'react';\nimport s from './Form.module.css';\nimport { v4 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\nimport {\n  addContacts,\n  deleteContacts,\n} from '../../redux/app/app-phonebook-actions';\n\nclass Form extends Component {\n  state = {\n    // contacts: [],\n    id: '',\n    name: '',\n    number: '',\n    association: 'Other',\n  };\n\n  contactIdName = uuid();\n  contactIdNumber = uuid();\n\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    // const contactId = uuid();\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    // this.setState({ id: contactId });\n  };\n\n  handleSabmit = e => {\n    e.preventDefault();\n    const contactId = uuid();\n    const { name, number, association } = this.state;\n    const contactItem = {\n      id: contactId,\n      name,\n      number,\n      association,\n    };\n    this.setState({ contactItem });\n    this.props.OnSubmit(contactItem);\n    this.props.onAdd(contactItem); //Дизпачим продукет в редакс\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ id: '', name: '', number: '', association: 'Other' });\n  };\n\n  render() {\n    // console.log(\"onADD\", this.props.onAdd)\n    return (\n      <form onSubmit={this.handleSabmit} className={s.m}>\n        <h2 className={s.title}>Phonebook</h2>\n        <label htmlFor={this.contactIdName} className={s.form__name}>\n          Name\n          <input\n            id={this.contactIdName}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={this.contactIdNumber} className={s.form__number}>\n          Number\n          <input\n            id={this.contactIdNumber}\n            onChange={this.handleChange}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <div className={s.radio__btn}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Work\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Work'}\n            />\n            Work\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Family\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Family'}\n            />\n            Family\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Friends\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Friends'}\n            />\n            Friends\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Other\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Other'}\n            />\n            Other\n          </label>\n        </div>\n        <button type=\"submit\">Add contacts</button>\n      </form>\n    );\n  }\n}\n\n//  export default Form;\n\n// const mapStateToProps = (store) => {\n//   return {\n//       contactProps: store.contact,\n\n//   }\n// };\n\nconst mapDispatchToProps = dispatch => {\n  // console.log(\"dispatch\", dispatch);\n  return {\n    onAdd: contactR => dispatch(addContacts(contactR)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Form);\n","export const addContacts = contactLst => ({\n  type: 'contacts/add',\n  payload: contactLst,\n});\n\nexport const deleteContacts = id => ({\n  type: 'contacts/delete',\n  payload: { id },\n});\n\n// export const contactFilter = value => ({\n//   type: 'filter/value',\n//   payload: value,\n// });\n","import s from './Todolist.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  addContacts,\n  deleteContacts,\n} from '../../redux/app/app-phonebook-actions';\n// import { Form } from '../Forms/Form';\n// import { App } from '../../App';\n// import React, { Component } from 'react';\n\nfunction Todolist({ contactsOll, onDeleteContact }) {\n  // console.log(\"contactProps\",contactProps)\n  return (\n    <ul className={s.contacts__list}>\n      {contactsOll.map(({ id, name, number, association }) => {\n        return (\n          <li key={id} className={s.item}>\n            {' '}\n            <p className={s.name__contact}>\n              Association: {association} | <span> name: {name} | </span>\n              <span>number: {number} |</span>\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              {' '}\n              DELETE contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n// export default Todolist;\n\nTodolist.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\n//  export default Form;\n\nconst mapStateToProps = state => {\n  console.log('store.contactProps', state.contactProps);\n  return {\n    contactsOll: state.contact,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: id => dispatch(deleteContacts(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Todolist);\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n//import { connect } from 'react-redux';\n//import { contactFilter } from '../../redux/app/app-phonebook-reducer.js';\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n\n// const mapDispatchToProps = dispatch => {\n\n//   return {\n//     onChange: value => dispatch(contactFilter(value)),\n//   };\n// };\n// export default connect(null, mapDispatchToProps)(Filter);\n","import './App.css';\nimport { Component } from 'react';\nimport Form from './components/Forms/Form';\nimport TodoList from './components/Todolist/Todolist';\nimport Filter from './components/Filter/Filter';\nimport { connect } from 'react-redux';\n//import { addContacts, deleteContacts, contactFilter} from '../../redux/app/app-phonebook-actions';\n// import { connect } from 'react-redux';\n//import { contact, filter } from './redux/app/app-phonebook-reducer';\n//  import { addContacts, deleteContacts } from './redux/app/app-phonebook-actions.js';\n// import { v4 as uuid } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contactsOll: [\n      // {\n      //   id: 'id-1',\n      //   name: 'Rosie Simpson',\n      //   number: '459-12-56',\n      //   association: 'Other',\n      // },\n      // {\n      //   id: 'id-2',\n      //   name: 'Hermione Kline',\n      //   number: '443-89-12',\n      //   association: 'Other',\n      // },\n      // {\n      //   id: 'id-3',\n      //   name: 'Eden Clements',\n      //   number: '645-17-79',\n      //   association: 'Other',\n      // },\n      // {\n      //   id: 'id-4',\n      //   name: 'Annie Copeland',\n      //   number: '227-91-26',\n      //   association: 'Other',\n      // },\n    ],\n    filter: '',\n  };\n\n  hendlerSubmitForm = ({ id, name, number, association }) => {\n    // const contactId = uuid();\n    const contact = {\n      id,\n      name,\n      number,\n      association,\n    };\n    // const contactRedux= this.props.onAdd(contact);\n    // console.log(\"contactRedux\",contactRedux)\n    console.log('contact ', contact.name);\n    this.state.contactsOll.some(el => el.name === contact.name)\n      ? alert(`${contact.name} is already in contactsOll`)\n      : this.setState(prevState => {\n          return { contactsOll: [contact, ...prevState.contactsOll] };\n        });\n  };\n\n  // deleteContact = contactId => {\n  //   // console.log(contactId);\n  //   this.setState(({ contactsOll }) => ({\n  //     contactsOll: contactsOll.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contactsOll, filter } = this.state;\n    const optimizedFilter = filter.toLowerCase();\n\n    return contactsOll.filter(contact =>\n      contact.name.toLowerCase().includes(optimizedFilter),\n    );\n  };\n\n  render() {\n    const { contactsOll, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    console.log(contactsOll);\n\n    return (\n      <div className=\"App\">\n        <Form OnSubmit={this.hendlerSubmitForm} />\n        {<Filter value={filter} onChange={this.changeFilter} />}\n\n        <TodoList\n          contactsOll={visibleContacts}\n          // onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\n//  export default App;\n\nconst mapStateToProps = state => {\n  console.log('store.contactProps', state.contactsOll);\n  return {\n    contactsOll: state.contact,\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n\n//   return {\n//     onDeleteContact: id => dispatch(deleteContacts(id)),\n//   };\n// };\nexport default connect(mapStateToProps, null)(App);\n// const mapStateToProps = dispatch => {\n\n//   return {\n//     onDeleteContact: id => dispatch(deleteContacts(id)),\n//   };\n// };\n\n// export default connect(mapStateToProps, null)(App);\n// const mapStateToProps = (store) => {\n//   return {\n//       contactProps: store.contact,\n\n//   }\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   console.log(\"dispatch\", dispatch);\n//   return {\n//     onAdd: (contact) => dispatch(addContacts(contact))\n\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { addContacts, deleteContacts } from './app-phonebook-actions';\nconst initState = [\n  {\n    id: 'id-1',\n    name: 'Rosie Simpson',\n    number: '459-12-56',\n    association: 'Other',\n  },\n  {\n    id: 'id-2',\n    name: 'Hermione Kline',\n    number: '443-89-12',\n    association: 'Other',\n  },\n  {\n    id: 'id-3',\n    name: 'Eden Clements',\n    number: '645-17-79',\n    association: 'Other',\n  },\n  {\n    id: 'id-4',\n    name: 'Annie Copeland',\n    number: '227-91-26',\n    association: 'Other',\n  },\n];\n\nconst contactList = (state = initState, action) => {\n  // console.log('action.payload', action.payload);\n  console.log('state', state);\n  switch (action.type) {\n    case 'contacts/add':\n      return [...state, action.payload];\n    case 'contacts/delete':\n      return state.filter(contact => contact.id !== action.payload.id);\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nconst contactFilter = (state = '', action) => {\n  return state;\n};\n\n// const contactFilter = (state = '', { payload }) => {\n//   return payload;\n// };\nexport const phonebookReducer = combineReducers({\n  contact: contactList,\n  filter: contactFilter,\n});\n\n// const productFilter = (state = '', { payload }) => {\n//   return payload;\n// };\n","import { createStore, applyMiddleware } from 'redux';\nimport { phonebookReducer } from './app/app-phonebook-reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nexport const store = createStore(\n  phonebookReducer,\n  composeWithDevTools(applyMiddleware()),\n);\n\n// const reducer = (\n//   state = {\n//     contacts: {\n//       items: [],\n//       filter: '',\n//     },\n//   },\n//   action,\n// ) => {\n//   console.log('Логуємо ЕКШН', action);\n//   return state;\n// };\n\n// const store = createStore(reducer, { a: 'початковий стан' });\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n// import { myAction } from './redux/app/app-phonebook-actions';\nimport { Provider } from 'react-redux';\n// console.log(store);\n// console.log(store.getState());\n// console.log(store.dispatch(myAction));\n// store.dispatch(myAction);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__mnX69\",\"title\":\"Form_title__2HjXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__2PhS2\",\"item\":\"Todolist_item__3YgJU\"};"],"sourceRoot":""}