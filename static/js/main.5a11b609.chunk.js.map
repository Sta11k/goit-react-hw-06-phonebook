{"version":3,"sources":["components/Filter/Filter.module.css","components/Forms/Form.js","redux/app/app-phonebook-actions.js","components/Todolist/Todolist.js","components/Filter/Filter.js","App.js","redux/app/app-phonebook-reducer.js","redux/store.js","index.js","components/Forms/Form.module.css","components/Todolist/Todolist.module.css"],"names":["module","exports","Form","state","id","name","number","association","contactIdName","uuid","contactIdNumber","handleChange","e","console","log","currentTarget","value","setState","handleSabmit","preventDefault","contactId","contactItem","props","onAdd","resetForm","onSubmit","this","className","s","m","title","htmlFor","form__name","onChange","type","pattern","required","form__number","radio__btn","checked","Component","connect","dispatch","contactR","payload","optimizedFilter","filter","toLowerCase","contactsOll","contact","includes","onDeleteContact","deleteContacts","contacts__list","map","item","name__contact","btn","onClick","event","label","input","App","initState","phonebookReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a11b609.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1w6Dh\",\"input\":\"Filter_input__2l4wY\"};","import React from 'react';\nimport { Component } from 'react';\nimport s from './Form.module.css';\nimport { v4 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addContacts } from '../../redux/app/app-phonebook-actions';\n\nclass Form extends Component {\n  state = {\n    // contacts: [],\n    id: '',\n    name: '',\n    number: '',\n    association: 'Other',\n  };\n\n  contactIdName = uuid();\n  contactIdNumber = uuid();\n\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    // const contactId = uuid();\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    // this.setState({ id: contactId });\n  };\n\n  handleSabmit = e => {\n    e.preventDefault();\n    const contactId = uuid();\n    const { name, number, association } = this.state;\n    const contactItem = {\n      id: contactId,\n      name,\n      number,\n      association,\n    };\n    this.setState({ contactItem });\n\n    this.props.onAdd(contactItem); //Дизпачим продукет в редакс\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ id: '', name: '', number: '', association: 'Other' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSabmit} className={s.m}>\n        <h2 className={s.title}>Phonebook</h2>\n        <label htmlFor={this.contactIdName} className={s.form__name}>\n          Name\n          <input\n            id={this.contactIdName}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={this.contactIdNumber} className={s.form__number}>\n          Number\n          <input\n            id={this.contactIdNumber}\n            onChange={this.handleChange}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <div className={s.radio__btn}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Work\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Work'}\n            />\n            Work\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Family\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Family'}\n            />\n            Family\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Friends\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Friends'}\n            />\n            Friends\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Other\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Other'}\n            />\n            Other\n          </label>\n        </div>\n        <button type=\"submit\">Add contacts</button>\n      </form>\n    );\n  }\n}\n\n//  export default Form;\n\n// const mapStateToProps = (store) => {\n//   return {\n//       contactProps: store.contact,\n\n//   }\n// };\n\nconst mapDispatchToProps = dispatch => {\n  // console.log(\"dispatch\", dispatch);\n  return {\n    onAdd: contactR => dispatch(addContacts(contactR)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Form);\n","export const addContacts = contactLst => ({\n  type: 'contacts/add',\n  payload: contactLst,\n});\n\nexport const deleteContacts = id => ({\n  type: 'contacts/delete',\n  payload: { id },\n});\n\nexport const changeFilter = value => ({\n  type: 'filter/value',\n  payload: value,\n});\n","import s from './Todolist.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContacts } from '../../redux/app/app-phonebook-actions';\n\nfunction Todolist({ contactsOll, onDeleteContact }) {\n  return (\n    <ul className={s.contacts__list}>\n      {contactsOll.map(({ id, name, number, association }) => {\n        return (\n          <li key={id} className={s.item}>\n            {' '}\n            <p className={s.name__contact}>\n              Association: {association} | <span> name: {name} | </span>\n              <span>number: {number} |</span>\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              {' '}\n              DELETE contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n// export default Todolist;\n\nTodolist.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { filter } = state;\n  const optimizedFilter = filter.toLowerCase();\n  const vizibleCOntacts = state.contact.filter(contact =>\n    contact.name.toLowerCase().includes(optimizedFilter),\n  );\n\n  return { contactsOll: vizibleCOntacts };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: id => dispatch(deleteContacts(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Todolist);\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/app/app-phonebook-actions';\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.currentTarget.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import './App.css';\nimport { Component } from 'react';\nimport Form from './components/Forms/Form';\nimport TodoList from './components/Todolist/Todolist';\nimport Filter from './components/Filter/Filter';\nimport { connect } from 'react-redux';\nclass App extends Component {\n  state = {\n    contactsOll: [],\n    filter: '',\n  };\n\n  render() {\n    const { contactsOll } = this.state;\n    // const visibleContacts = this.getVisibleContacts();\n    console.log('contactsOll', contactsOll);\n\n    return (\n      <div className=\"App\">\n        <Form />\n\n        <Filter />\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log('store.contactProps', state.contactsOll);\n  return {\n    contactsOll: state.contact,\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\n// import { addContacts, deleteContacts } from './app-phonebook-actions';\nconst initState = [\n  {\n    id: 'id-1',\n    name: 'Rosie Simpson',\n    number: '459-12-56',\n    association: 'Other',\n  },\n  {\n    id: 'id-2',\n    name: 'Hermione Kline',\n    number: '443-89-12',\n    association: 'Other',\n  },\n  {\n    id: 'id-3',\n    name: 'Eden Clements',\n    number: '645-17-79',\n    association: 'Other',\n  },\n  {\n    id: 'id-4',\n    name: 'Annie Copeland',\n    number: '227-91-26',\n    association: 'Other',\n  },\n];\n\nconst contactList = (state = initState, { type, payload }) => {\n  // console.log('action.payload', action.payload);\n  // console.log('state', state);\n  switch (type) {\n    case 'contacts/add':\n      return [...state, payload];\n    case 'contacts/delete':\n      return state.filter(contact => contact.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case 'filter/value':\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport const phonebookReducer = combineReducers({\n  contact: contactList,\n  filter,\n});\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { phonebookReducer } from './app/app-phonebook-reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nexport const store = createStore(\r\n  phonebookReducer,\r\n  composeWithDevTools(applyMiddleware()),\r\n);\r\n\r\n// const reducer = (\r\n//   state = {\r\n//     contacts: {\r\n//       items: [],\r\n//       filter: '',\r\n//     },\r\n//   },\r\n//   action,\r\n// ) => {\r\n//   console.log('Логуємо ЕКШН', action);\r\n//   return state;\r\n// };\r\n\r\n// const store = createStore(reducer, { a: 'початковий стан' });\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__3dnrZ\",\"title\":\"Form_title__1rj_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__1k81c\",\"item\":\"Todolist_item__36HEU\"};"],"sourceRoot":""}