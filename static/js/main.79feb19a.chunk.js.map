{"version":3,"sources":["components/Filter/Filter.module.css","components/Forms/Form.module.css","components/Todolist/Todolist.module.css","components/Forms/Form.js","components/Todolist/Todolist.js","components/Filter/Filter.js","App.js","redux/store.js","index.js"],"names":["module","exports","Form","state","id","name","number","association","contactIdName","uuid","contactIdNumber","handleChange","e","console","log","currentTarget","value","setState","handleSabmit","preventDefault","props","OnSubmit","resetForm","onSubmit","this","className","s","m","title","htmlFor","form__name","onChange","type","pattern","required","form__number","radio__btn","checked","Component","Todolist","contactsOll","onDeleteContact","contacts__list","map","item","name__contact","btn","onClick","Filter","label","input","App","filter","hendlerSubmitForm","contact","some","el","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContacts","optimizedFilter","toLowerCase","includes","visibleContacts","length","store","createStore","contacts","items","action","a","getState","dispatch","myAction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79feb19a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__MWq11\",\"input\":\"Filter_input__1gi6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__mnX69\",\"title\":\"Form_title__2HjXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__2PhS2\",\"item\":\"Todolist_item__3YgJU\"};","import React from 'react';\r\nimport { Component } from 'react';\r\nimport s from './Form.module.css';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n    association: 'Other',\r\n  };\r\n\r\n  contactIdName = uuid();\r\n  contactIdNumber = uuid();\r\n\r\n  handleChange = e => {\r\n    console.log(e.currentTarget.value);\r\n    // const contactId = uuid();\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n    // this.setState({ id: contactId });\r\n  };\r\n\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    const { name, number, association } = this.state;\r\n    this.setState({\r\n      // id,\r\n      name,\r\n      number,\r\n      association,\r\n    });\r\n    // this.setState({ contactPhone });\r\n    this.props.OnSubmit(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ id: '', name: '', number: '', association: 'Other' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSabmit} className={s.m}>\r\n        <h2 className={s.title}>Phonebook</h2>\r\n        <label htmlFor={this.contactIdName} className={s.form__name}>\r\n          Name\r\n          <input\r\n            id={this.contactIdName}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={this.contactIdNumber} className={s.form__number}>\r\n          Number\r\n          <input\r\n            id={this.contactIdNumber}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <div className={s.radio__btn}>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"association\"\r\n              value=\"Work\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.association === 'Work'}\r\n            />\r\n            Work\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"association\"\r\n              value=\"Family\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.association === 'Family'}\r\n            />\r\n            Family\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"association\"\r\n              value=\"Friends\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.association === 'Friends'}\r\n            />\r\n            Friends\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"association\"\r\n              value=\"Other\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.association === 'Other'}\r\n            />\r\n            Other\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import s from './Todolist.module.css';\r\nimport PropTypes from 'prop-types';\r\n// import { Form } from '../Forms/Form';\r\n// import { App } from '../../App';\r\n// import React, { Component } from 'react';\r\n\r\nfunction Todolist({ contactsOll, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {contactsOll.map(({ id, name, number, association }) => {\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            {' '}\r\n            <p className={s.name__contact}>\r\n              Association: {association} | <span> name: {name} | </span>\r\n              <span>number: {number} |</span>\r\n            </p>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              {' '}\r\n              DELETE contact\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default Todolist;\r\n\r\nTodolist.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\r\nimport { Component } from 'react';\r\nimport Form from './components/Forms/Form';\r\nimport TodoList from './components/Todolist/Todolist';\r\nimport Filter from './components/Filter/Filter';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contactsOll: [\r\n      {\r\n        id: 'id-1',\r\n        name: 'Rosie Simpson',\r\n        number: '459-12-56',\r\n        association: 'Other',\r\n      },\r\n      {\r\n        id: 'id-2',\r\n        name: 'Hermione Kline',\r\n        number: '443-89-12',\r\n        association: 'Other',\r\n      },\r\n      {\r\n        id: 'id-3',\r\n        name: 'Eden Clements',\r\n        number: '645-17-79',\r\n        association: 'Other',\r\n      },\r\n      {\r\n        id: 'id-4',\r\n        name: 'Annie Copeland',\r\n        number: '227-91-26',\r\n        association: 'Other',\r\n      },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  hendlerSubmitForm = ({ name, number, association }) => {\r\n    const contactId = uuid();\r\n    const contact = {\r\n      id: contactId,\r\n      name,\r\n      number,\r\n      association,\r\n    };\r\n    console.log('contact ', contact.name);\r\n    this.state.contactsOll.some(el => el.name === contact.name)\r\n      ? alert(`${contact.name} is already in contactsOll`)\r\n      : this.setState(prevState => {\r\n          return { contactsOll: [contact, ...prevState.contactsOll] };\r\n        });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    // console.log(contactId);\r\n    this.setState(({ contactsOll }) => ({\r\n      contactsOll: contactsOll.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contactsOll, filter } = this.state;\r\n    const optimizedFilter = filter.toLowerCase();\r\n\r\n    return contactsOll.filter(contact =>\r\n      contact.name.toLowerCase().includes(optimizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contactsOll, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    // console.log(this.state.contactsOll);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Form OnSubmit={this.hendlerSubmitForm} />\r\n        {contactsOll.length > 1 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n\r\n        <TodoList\r\n          contactsOll={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\n\r\nconst reducer = (\r\n  state = {\r\n    contacts: {\r\n      items: [],\r\n      filter: '',\r\n    },\r\n  },\r\n  action,\r\n) => {\r\n  console.log('Логуємо ЕКШН', action);\r\n  return state;\r\n};\r\n\r\nconst store = createStore(reducer, { a: 'початковий стан' });\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { myAction } from './redux/app-actions';\nimport { Provider } from 'react-redux';\nconsole.log(store);\nconsole.log(store.getState());\n// console.log(store.dispatch(myAction));\nstore.dispatch(myAction);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}